import{_ as s,o as a,c as l,Q as n}from"./chunks/framework.a4f2a176.js";const o="data:image/png;base64,",u=JSON.parse('{"title":"docker","description":"docker日常使用","frontmatter":{"title":"docker","date":"2023-02-27T00:00:00.000Z","description":"docker日常使用","disabled":false,"readMins":5,"tags":["Github"]},"headers":[],"relativePath":"blog/ tools/docker.md","filePath":"blog/ tools/docker.md"}'),p={name:"blog/ tools/docker.md"},e=n(`<h1 id="docker-常用命令" tabindex="-1">docker 常用命令 <a class="header-anchor" href="#docker-常用命令" aria-label="Permalink to &quot;docker 常用命令&quot;">​</a></h1><h2 id="查看服务" tabindex="-1">查看服务： <a class="header-anchor" href="#查看服务" aria-label="Permalink to &quot;查看服务：&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ps</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">grep</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">mysql</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ps</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">grep</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mysql</span></span></code></pre></div><h2 id="拉取镜像" tabindex="-1">拉取镜像： <a class="header-anchor" href="#拉取镜像" aria-label="Permalink to &quot;拉取镜像：&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pull</span><span style="color:#E1E4E8;"> [OPTIONS] NAME[:TAG</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">@DIGEST]</span></span>
<span class="line"><span style="color:#B392F0;">例：docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pull</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">tomcat:8</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pull</span><span style="color:#24292E;"> [OPTIONS] NAME[:TAG</span><span style="color:#D73A49;">|</span><span style="color:#24292E;">@DIGEST]</span></span>
<span class="line"><span style="color:#6F42C1;">例：docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pull</span><span style="color:#24292E;">  </span><span style="color:#032F62;">tomcat:8</span></span></code></pre></div><h2 id="启动服务" tabindex="-1">启动服务： <a class="header-anchor" href="#启动服务" aria-label="Permalink to &quot;启动服务：&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--restart</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">always</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--name</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">mytomcat</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-p</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">8082</span><span style="color:#9ECBFF;">:8080</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">-v</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">/home/GuanPlusTest/static/report/tomcat/webapps:/usr/local/tomcat/webapps/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-d</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">2</span><span style="color:#9ECBFF;">d2bccf89f53</span></span>
<span class="line"><span style="color:#B392F0;">参数解释：</span></span>
<span class="line"><span style="color:#B392F0;">--restart</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">always</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">表示不管什么情况退出都自动重启</span></span>
<span class="line"><span style="color:#B392F0;">—name</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">mytomcat</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">容器重命名mytomcat</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">（这个名称通过docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ps</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">grep</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">名称）</span></span>
<span class="line"><span style="color:#B392F0;">-p</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">8082</span><span style="color:#9ECBFF;">:8080</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">容器的8080端口映射到主机的8082端口</span></span>
<span class="line"><span style="color:#B392F0;">-v</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">/home/GuanPlusTest/static/report/tomcat/webapps:/usr/local/tomcat/webapps/</span></span>
<span class="line"><span style="color:#B392F0;">冒号前面为宿主机的目录，冒号后面为容器的目录。意思是将容器的这个目录挂载到宿主机的/home/.../webapps目录下，这样的话只需要操作宿主机（本机）上的这个目录下的文件，就相当于操作容器的那个目录；</span></span>
<span class="line"><span style="color:#B392F0;">-d</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">挂后台运行</span></span>
<span class="line"><span style="color:#B392F0;">run命令</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">冒号左边都是宿主机，冒号右边都是容器内的</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--restart</span><span style="color:#24292E;"> </span><span style="color:#032F62;">always</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--name</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mytomcat</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-p</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">8082</span><span style="color:#032F62;">:8080</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">-v</span><span style="color:#24292E;">  </span><span style="color:#032F62;">/home/GuanPlusTest/static/report/tomcat/webapps:/usr/local/tomcat/webapps/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-d</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">2</span><span style="color:#032F62;">d2bccf89f53</span></span>
<span class="line"><span style="color:#6F42C1;">参数解释：</span></span>
<span class="line"><span style="color:#6F42C1;">--restart</span><span style="color:#24292E;"> </span><span style="color:#032F62;">always</span><span style="color:#24292E;"> </span><span style="color:#032F62;">表示不管什么情况退出都自动重启</span></span>
<span class="line"><span style="color:#6F42C1;">—name</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mytomcat</span><span style="color:#24292E;"> </span><span style="color:#032F62;">容器重命名mytomcat</span><span style="color:#24292E;"> </span><span style="color:#032F62;">（这个名称通过docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ps</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">grep</span><span style="color:#24292E;"> </span><span style="color:#032F62;">名称）</span></span>
<span class="line"><span style="color:#6F42C1;">-p</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">8082</span><span style="color:#032F62;">:8080</span><span style="color:#24292E;">  </span><span style="color:#032F62;">容器的8080端口映射到主机的8082端口</span></span>
<span class="line"><span style="color:#6F42C1;">-v</span><span style="color:#24292E;">  </span><span style="color:#032F62;">/home/GuanPlusTest/static/report/tomcat/webapps:/usr/local/tomcat/webapps/</span></span>
<span class="line"><span style="color:#6F42C1;">冒号前面为宿主机的目录，冒号后面为容器的目录。意思是将容器的这个目录挂载到宿主机的/home/.../webapps目录下，这样的话只需要操作宿主机（本机）上的这个目录下的文件，就相当于操作容器的那个目录；</span></span>
<span class="line"><span style="color:#6F42C1;">-d</span><span style="color:#24292E;"> </span><span style="color:#032F62;">挂后台运行</span></span>
<span class="line"><span style="color:#6F42C1;">run命令</span><span style="color:#24292E;">  </span><span style="color:#032F62;">冒号左边都是宿主机，冒号右边都是容器内的</span></span></code></pre></div><p>启动成功后可以查看到服务： <img src="`+o+`" alt="这是图片" title="Magic Gardens"></p><h2 id="重启" tabindex="-1">重启： <a class="header-anchor" href="#重启" aria-label="Permalink to &quot;重启：&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">restart</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">进程ID（就是docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ps以后的第一个ID）</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">restart</span><span style="color:#24292E;"> </span><span style="color:#032F62;">进程ID（就是docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ps以后的第一个ID）</span></span></code></pre></div><h2 id="停止服务" tabindex="-1">停止服务： <a class="header-anchor" href="#停止服务" aria-label="Permalink to &quot;停止服务：&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stop</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">容器名称/容器id</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stop</span><span style="color:#24292E;"> </span><span style="color:#032F62;">容器名称/容器id</span></span></code></pre></div><h2 id="删除容器" tabindex="-1">删除容器： <a class="header-anchor" href="#删除容器" aria-label="Permalink to &quot;删除容器：&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">容器名称/容器id</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">容器名称/容器id</span></span></code></pre></div><h2 id="查看日志" tabindex="-1">查看日志： <a class="header-anchor" href="#查看日志" aria-label="Permalink to &quot;查看日志：&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">logs</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">进程ID（就是docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ps以后的那个ID）</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">docker</span><span style="color:#24292E;">  </span><span style="color:#032F62;">logs</span><span style="color:#24292E;"> </span><span style="color:#032F62;">进程ID（就是docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ps以后的那个ID）</span></span></code></pre></div><h2 id="查看本地有哪些镜像" tabindex="-1">查看本地有哪些镜像： <a class="header-anchor" href="#查看本地有哪些镜像" aria-label="Permalink to &quot;查看本地有哪些镜像：&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">images</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">或docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">images</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">grep</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;镜像名称&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">images</span><span style="color:#24292E;">  </span><span style="color:#032F62;">或docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">images</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">grep</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;镜像名称&quot;</span></span></code></pre></div><h2 id="删除本地镜像" tabindex="-1">删除本地镜像： <a class="header-anchor" href="#删除本地镜像" aria-label="Permalink to &quot;删除本地镜像：&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rmi</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">registry.cn-hangzhou.aliyuncs.com/guandata/jdbc-worker:20221230_3e19305</span></span>
<span class="line"><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rmi</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">仓库名:TAG</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rmi</span><span style="color:#24292E;"> </span><span style="color:#032F62;">registry.cn-hangzhou.aliyuncs.com/guandata/jdbc-worker:20221230_3e19305</span></span>
<span class="line"><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rmi</span><span style="color:#24292E;"> </span><span style="color:#032F62;">仓库名:TAG</span></span></code></pre></div><h2 id="拉取远程仓库镜像" tabindex="-1">拉取远程仓库镜像： <a class="header-anchor" href="#拉取远程仓库镜像" aria-label="Permalink to &quot;拉取远程仓库镜像：&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pull</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">registry.cn-hangzhou.aliyuncs.com/guandata/jdbc-worker:20221230_3e19305</span></span>
<span class="line"><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pull</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">仓库名:TAG</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pull</span><span style="color:#24292E;">  </span><span style="color:#032F62;">registry.cn-hangzhou.aliyuncs.com/guandata/jdbc-worker:20221230_3e19305</span></span>
<span class="line"><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pull</span><span style="color:#24292E;"> </span><span style="color:#032F62;">仓库名:TAG</span></span></code></pre></div><h2 id="理解" tabindex="-1">理解： <a class="header-anchor" href="#理解" aria-label="Permalink to &quot;理解：&quot;">​</a></h2><p> 镜像-其实就是一个包，跟jar包类似的，可以推到远程仓库，通过docker pull下来进行部署；<br> 容器-可以和一个服务做对比，一个容器就是一个镜像部署run 以后的一个“服务”，容器有容器id和容器名称。就类似于ps -ef|grep “服务名称”后的服务id和服务名称；<br> 所以对应镜像有bulid push pull的操作；<br> 对应容器有 run stop restart rm的操作。<br></p>`,24),c=[e];function t(r,y,E,i,d,F){return a(),l("div",null,c)}const C=s(p,[["render",t]]);export{u as __pageData,C as default};
