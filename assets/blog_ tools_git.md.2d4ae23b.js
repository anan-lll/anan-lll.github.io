import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.a4f2a176.js";const g=JSON.parse('{"title":"git","description":"git日常使用记录","frontmatter":{"title":"git","date":"2021-09-30T00:00:00.000Z","description":"git日常使用记录","disabled":false,"readMins":5,"tags":["Github"]},"headers":[],"relativePath":"blog/ tools/git.md","filePath":"blog/ tools/git.md"}'),p={name:"blog/ tools/git.md"},o=l(`<h1 id="git日常使用" tabindex="-1">Git日常使用 <a class="header-anchor" href="#git日常使用" aria-label="Permalink to &quot;Git日常使用&quot;">​</a></h1><h2 id="拉取代码" tabindex="-1">拉取代码 <a class="header-anchor" href="#拉取代码" aria-label="Permalink to &quot;拉取代码&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">### 拉取指定分支的代码：</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">clone</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-b</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">分支名</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">仓库地址</span></span>
<span class="line"><span style="color:#B392F0;">示例：</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">clone</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-b</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">performance</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ssh://git@gitlab.mayidata.com:2222/testing.git</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">### 拉取指定分支的代码：</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">clone</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-b</span><span style="color:#24292E;"> </span><span style="color:#032F62;">分支名</span><span style="color:#24292E;"> </span><span style="color:#032F62;">仓库地址</span></span>
<span class="line"><span style="color:#6F42C1;">示例：</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">clone</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-b</span><span style="color:#24292E;"> </span><span style="color:#032F62;">performance</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ssh://git@gitlab.mayidata.com:2222/testing.git</span></span></code></pre></div><h2 id="提交代码到一个新项目" tabindex="-1">提交代码到一个新项目 <a class="header-anchor" href="#提交代码到一个新项目" aria-label="Permalink to &quot;提交代码到一个新项目&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">首次提交代码到一个新项目：</span></span>
<span class="line"><span style="color:#B392F0;">1、（先进入项目文件夹）通过命令</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">init</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">把这个目录变成git可以管理的仓库</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">init</span></span>
<span class="line"><span style="color:#B392F0;">2、把文件添加到版本库中，使用命令</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.添加到暂存区里面去，不要忘记后面的小数点“.”，意为添加文件夹下的所有文件</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.</span></span>
<span class="line"><span style="color:#B392F0;">3、用命令</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">commit告诉Git，把文件提交到仓库。引号内为提交说明</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">commit</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-m</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;first commit&#39;</span></span>
<span class="line"><span style="color:#B392F0;">4、关联到远程库</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">remote</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">origin</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">你的远程库地址</span></span>
<span class="line"><span style="color:#B392F0;">如：</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">remote</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">origin</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://github.com/githubusername/demo.git</span></span>
<span class="line"><span style="color:#B392F0;">5、获取远程库与本地同步合并（如果远程库不为空必须做这一步，否则后面的提交会失败）</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pull</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--rebase</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">origin</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">master</span></span>
<span class="line"><span style="color:#B392F0;">6、把本地库的内容推送到远程，使用</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">push命令，实际上是把当前分支master推送到远程。执行此命令后会要求输入用户名、密码，验证通过后即开始上传。</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">push</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-u</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">origin</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">master</span></span>
<span class="line"><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">、状态查询命令</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">status</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">首次提交代码到一个新项目：</span></span>
<span class="line"><span style="color:#6F42C1;">1、（先进入项目文件夹）通过命令</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">init</span><span style="color:#24292E;"> </span><span style="color:#032F62;">把这个目录变成git可以管理的仓库</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">init</span></span>
<span class="line"><span style="color:#6F42C1;">2、把文件添加到版本库中，使用命令</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.添加到暂存区里面去，不要忘记后面的小数点“.”，意为添加文件夹下的所有文件</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.</span></span>
<span class="line"><span style="color:#6F42C1;">3、用命令</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">commit告诉Git，把文件提交到仓库。引号内为提交说明</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">commit</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-m</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;first commit&#39;</span></span>
<span class="line"><span style="color:#6F42C1;">4、关联到远程库</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">remote</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#032F62;">origin</span><span style="color:#24292E;"> </span><span style="color:#032F62;">你的远程库地址</span></span>
<span class="line"><span style="color:#6F42C1;">如：</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">remote</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#032F62;">origin</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://github.com/githubusername/demo.git</span></span>
<span class="line"><span style="color:#6F42C1;">5、获取远程库与本地同步合并（如果远程库不为空必须做这一步，否则后面的提交会失败）</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pull</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--rebase</span><span style="color:#24292E;"> </span><span style="color:#032F62;">origin</span><span style="color:#24292E;"> </span><span style="color:#032F62;">master</span></span>
<span class="line"><span style="color:#6F42C1;">6、把本地库的内容推送到远程，使用</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">push命令，实际上是把当前分支master推送到远程。执行此命令后会要求输入用户名、密码，验证通过后即开始上传。</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">push</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-u</span><span style="color:#24292E;"> </span><span style="color:#032F62;">origin</span><span style="color:#24292E;"> </span><span style="color:#032F62;">master</span></span>
<span class="line"><span style="color:#D73A49;">*</span><span style="color:#24292E;">、状态查询命令</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">status</span></span></code></pre></div><h2 id="重新建立远程仓库" tabindex="-1">重新建立远程仓库 <a class="header-anchor" href="#重新建立远程仓库" aria-label="Permalink to &quot;重新建立远程仓库&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">首先查看</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">remote</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-v</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">查看是否正确</span></span>
<span class="line"><span style="color:#B392F0;">然后更改之前先移除</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">remote</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">origin</span></span>
<span class="line"><span style="color:#B392F0;">最后加入地址</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">remote</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">origin</span><span style="color:#E1E4E8;"> [地址]</span></span>
<span class="line"><span style="color:#B392F0;">最后查看是否更正</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">remote</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-v</span></span>
<span class="line"><span style="color:#B392F0;">就ok了</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">首先查看</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">remote</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-v</span><span style="color:#24292E;"> </span><span style="color:#032F62;">查看是否正确</span></span>
<span class="line"><span style="color:#6F42C1;">然后更改之前先移除</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">remote</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">origin</span></span>
<span class="line"><span style="color:#6F42C1;">最后加入地址</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">remote</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#032F62;">origin</span><span style="color:#24292E;"> [地址]</span></span>
<span class="line"><span style="color:#6F42C1;">最后查看是否更正</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">remote</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-v</span></span>
<span class="line"><span style="color:#6F42C1;">就ok了</span></span></code></pre></div><h2 id="提交代码流程" tabindex="-1">提交代码流程 <a class="header-anchor" href="#提交代码流程" aria-label="Permalink to &quot;提交代码流程&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">### 查看所在分支</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">branch</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-a</span></span>
<span class="line"><span style="color:#6A737D;">### 查看修改了哪些文件</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">status</span></span>
<span class="line"><span style="color:#6A737D;">### 提交所需提交的文件</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">xxx.java</span></span>
<span class="line"><span style="color:#B392F0;">1、这里需要注意：git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add某个文件需要填写绝对路径，就把上面需要modified的文件路径copy过来即可：</span></span>
<span class="line"><span style="color:#B392F0;">如：git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">src/test/java/hbase/insert/MsgUserToHbase.java</span></span>
<span class="line"><span style="color:#B392F0;">2、如果想要忽略某个文件，上传其他文件</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">restore</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">fil</span><span style="color:#E1E4E8;">e</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">示例：git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">restore</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">src/test/java/hbase/insert/MsgUserToHbase.java</span></span>
<span class="line"><span style="color:#B392F0;">3、如果想上传所有改动的文件：</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.</span></span>
<span class="line"><span style="color:#6A737D;">### commit</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">commit</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-m</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;描述&quot;</span></span>
<span class="line"><span style="color:#B392F0;">示例：git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">commit</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-m</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">“修改插入HBASE数据value为&quot;time|code&quot;格式”</span></span>
<span class="line"><span style="color:#6A737D;">### 提交代码到对应的分支</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">push</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-u</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">origin</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">分支</span></span>
<span class="line"><span style="color:#B392F0;">示例：</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">push</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-u</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">origin</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">test</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">### 查看所在分支</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">branch</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-a</span></span>
<span class="line"><span style="color:#6A737D;">### 查看修改了哪些文件</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">status</span></span>
<span class="line"><span style="color:#6A737D;">### 提交所需提交的文件</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#032F62;">xxx.java</span></span>
<span class="line"><span style="color:#6F42C1;">1、这里需要注意：git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add某个文件需要填写绝对路径，就把上面需要modified的文件路径copy过来即可：</span></span>
<span class="line"><span style="color:#6F42C1;">如：git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#032F62;">src/test/java/hbase/insert/MsgUserToHbase.java</span></span>
<span class="line"><span style="color:#6F42C1;">2、如果想要忽略某个文件，上传其他文件</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">restore</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">fil</span><span style="color:#24292E;">e</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#6F42C1;">示例：git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">restore</span><span style="color:#24292E;"> </span><span style="color:#032F62;">src/test/java/hbase/insert/MsgUserToHbase.java</span></span>
<span class="line"><span style="color:#6F42C1;">3、如果想上传所有改动的文件：</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.</span></span>
<span class="line"><span style="color:#6A737D;">### commit</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">commit</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-m</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;描述&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">示例：git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">commit</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-m</span><span style="color:#24292E;"> </span><span style="color:#032F62;">“修改插入HBASE数据value为&quot;time|code&quot;格式”</span></span>
<span class="line"><span style="color:#6A737D;">### 提交代码到对应的分支</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">push</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-u</span><span style="color:#24292E;"> </span><span style="color:#032F62;">origin</span><span style="color:#24292E;"> </span><span style="color:#032F62;">分支</span></span>
<span class="line"><span style="color:#6F42C1;">示例：</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">push</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-u</span><span style="color:#24292E;"> </span><span style="color:#032F62;">origin</span><span style="color:#24292E;"> </span><span style="color:#032F62;">test</span></span></code></pre></div><h2 id="删除远程分支的内容" tabindex="-1">删除远程分支的内容 <a class="header-anchor" href="#删除远程分支的内容" aria-label="Permalink to &quot;删除远程分支的内容&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">例如</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git删除远程分支</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.idea</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">目录</span></span>
<span class="line"><span style="color:#B392F0;">1、进入项目根目录：(项目的文件夹</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/c/users/john/blog/</span></span>
<span class="line"><span style="color:#B392F0;">2.删除缓存区.idea（保留工作区.idea）</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rm</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--cached</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-r</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.idea</span></span>
<span class="line"><span style="color:#B392F0;">3.提交.gitiginore文件，将.idea从源代码仓库中删除（-m</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">表示注解）</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">commit</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-m</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">“commit</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">and</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">remove</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.idea”</span></span>
<span class="line"><span style="color:#B392F0;">4.推送到远程端</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">push</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">例如</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git删除远程分支</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.idea</span><span style="color:#24292E;"> </span><span style="color:#032F62;">目录</span></span>
<span class="line"><span style="color:#6F42C1;">1、进入项目根目录：(项目的文件夹</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/c/users/john/blog/</span></span>
<span class="line"><span style="color:#6F42C1;">2.删除缓存区.idea（保留工作区.idea）</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rm</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--cached</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-r</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.idea</span></span>
<span class="line"><span style="color:#6F42C1;">3.提交.gitiginore文件，将.idea从源代码仓库中删除（-m</span><span style="color:#24292E;"> </span><span style="color:#032F62;">表示注解）</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">commit</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-m</span><span style="color:#24292E;"> </span><span style="color:#032F62;">“commit</span><span style="color:#24292E;"> </span><span style="color:#032F62;">and</span><span style="color:#24292E;"> </span><span style="color:#032F62;">remove</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.idea”</span></span>
<span class="line"><span style="color:#6F42C1;">4.推送到远程端</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">push</span></span></code></pre></div><h2 id="其他资料" tabindex="-1">其他资料 <a class="header-anchor" href="#其他资料" aria-label="Permalink to &quot;其他资料&quot;">​</a></h2><ul><li><a href="https://www.liaoxuefeng.com/wiki/896043488029600" target="_blank" rel="noreferrer">git教程</a></li><li><a href="https://segmentfault.com/a/1190000002612680" target="_blank" rel="noreferrer">git基础操作</a></li></ul>`,13),e=[o];function t(c,r,y,E,i,F){return a(),n("div",null,e)}const d=s(p,[["render",t]]);export{g as __pageData,d as default};
